var flag = sessionStorage.getItem('<%- config.url %>' + "/pageviews/" + '<%- current %>');
if (flag == "yes"){
  var paths = <%- JSON.stringify(posts) %>
  $.each(paths, function(index, path){
    var post = document.getElementById(path);
    var views = sessionStorage.getItem(path);
    if (views != null) {
      post.innerHTML = views;
      post.style.display = "inline";
    }
  });
} else if (flag == null){
  if(typeof require !== 'undefined') XLSX = require('xlsx');

  var url = "https://docs.google.com/spreadsheets/d/" + '<%= theme.google_docs_id %>' + "/export";
  var oReq = new XMLHttpRequest();
  oReq.open("GET", url, true);
  oReq.responseType = "arraybuffer";

  oReq.onload = function(e) {
    var arraybuffer = oReq.response;

    /* convert data to binary string */
    var data = new Uint8Array(arraybuffer);
	var arr = new Array();
	for(var i = 0; i != data.length; ++i) arr[i] = String.fromCharCode(data[i]);
	var bstr = arr.join("");

	/* Call XLSX */
	var workbook = XLSX.read(bstr, {type:"binary"});

    /* DO SOMETHING WITH workbook HERE */
	var json = to_json(workbook);

	<%- target %>
  }

  oReq.send();
}

function to_json(workbook) {
  var result = {};
  workbook.SheetNames.forEach(function(sheetName) {
	var roa = XLSX.utils.sheet_to_row_object_array(workbook.Sheets[sheetName]);
      if(roa.length > 0){
		result[sheetName] = roa;
	  }
  });
  return result;
}